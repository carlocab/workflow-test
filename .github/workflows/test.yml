name: CI
on: [push, pull_request, workflow_dispatch]

env:
  HOMEBREW_NO_COLOR: 1

jobs:
  tests:
    name: Miscellaneous `brew` tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-11, macos-12, ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]
        formula: [podman]
        trial: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      fail-fast: false
    steps:
      - name: Add `brew` to `PATH`
        if: runner.os == 'linux'
        run: echo "/home/linuxbrew/.linuxbrew/bin:${PATH}" >> "${GITHUB_PATH}"

      - name: Update Homebrew
        run: brew update --force

      - name: Show `brew --version`.
        run: |
          printf '### `brew --version` output\n' >> "$GITHUB_STEP_SUMMARY"
          printf '\n<details><summary>Details</summary>\n<p>\n\n' >> "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '%s\n' "$(brew --version)" | tee -a "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '\n</p>\n</details>\n' >> "$GITHUB_STEP_SUMMARY"

      - name: Show `brew config`.
        run: |
          printf '### `brew config` output\n' >> "$GITHUB_STEP_SUMMARY"
          printf '\n<details><summary>Details</summary>\n<p>\n\n' >> "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '%s\n' "$(brew config)" | tee -a "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '\n</p>\n</details>\n' >> "$GITHUB_STEP_SUMMARY"

      - name: Show `brew doctor`.
        run: |
          printf '### `brew doctor` output\n' >> "$GITHUB_STEP_SUMMARY"
          printf '\n<details><summary>Details</summary>\n<p>\n\n' >> "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '%s\n' "$(brew doctor 2&>1)" | tee -a "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '\n</p>\n</details>\n' >> "$GITHUB_STEP_SUMMARY"

      - name: Show formula info.
        env:
          FORMULA: ${{ matrix.formula }}
        run: |
          output="$(brew info --formula "$FORMULA")"
          status="$?"
          printf '### `brew info %s` output\n' "$FORMULA" >> "$GITHUB_STEP_SUMMARY"
          printf '\n<details><summary>Details</summary>\n<p>\n\n' >> "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '%s\n' "$output" | tee -a "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '\n</p>\n</details>\n' >> "$GITHUB_STEP_SUMMARY"
          exit "$status"

      - name: Check podman version
        run: |
          if brew info podman | grep '4\.4\.0'
          then
            printf '# LOOK HERE :tada:\n' >> "$GITHUB_STEP_SUMMARY"
          else
            exit 1
          fi

      - name: Copy `formula.json` to current directory
        run: cp "$(brew --cache)/api/formula.json" .

      - name: Upload `formula.json`
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.os }}-data-${{ matrix.trial }}
          path: formula.json

      - name: Install formula.
        env:
          FORMULA: ${{ matrix.formula }}
        run: brew install "$FORMULA"

      - name: Show formula version.
        env:
          FORMULA: ${{ matrix.formula }}
        run: |
          output="$(podman-remote -v)"
          status="$?"
          printf '### `podman-remove -v` output\n' >> "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '%s\n' "$output" | tee -a "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          exit "$status"

      - name: Show formula linkage.
        env:
          FORMULA: ${{ matrix.formula }}
        run: |
          output="$(brew linkage "$FORMULA")"
          status="$?"
          printf '### `brew linkage %s` output\n' "$FORMULA" >> "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '%s\n' "$output" | tee -a "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          exit "$status"

      - name: Show formula reverse linkage.
        env:
          FORMULA: ${{ matrix.formula }}
        run: |
          output="$(brew linkage --reverse "$FORMULA")"
          status="$?"
          printf '### `brew linkage --reverse %s` output\n' "$FORMULA" >> "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '%s\n' "$output" | tee -a "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          exit "$status"

      - name: Upgrade formula and dependencies.
        env:
          FORMULA: ${{ matrix.formula }}
        run: brew upgrade "$FORMULA" $(brew deps "$FORMULA")

      - name: Install test dependencies
        env:
          FORMULA: ${{ matrix.formula }}
        run: brew install --only-dependencies --include-test "$FORMULA"

      - name: Install bundler gems.
        run: brew install-bundler-gems

      - name: Test formula.
        env:
          FORMULA: ${{ matrix.formula }}
        run: |
          output="$(brew test --verbose "$FORMULA")"
          status="$?"
          printf '### `brew test %s` output\n' "$FORMULA" >> "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '%s\n' "$output" | tee -a "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          exit "$status"
