name: CI
on: [push, pull_request, workflow_dispatch]

env:
  HOMEBREW_DEVELOPER: 1

jobs:
  tests:
    name: Miscellaneous `brew` tests
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]
    steps:
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master
        with:
          test-bot: false

      - name: Checkout `master`
        run: git -C "$(brew --repository)" checkout master

      - name: Checkout `llvm` PR.
        run: |
          pushd "$(brew --repository homebrew/core)"
          git fetch origin pull/110308/head:dynare-test
          git checkout dynare-test
          git status
          git rev-parse HEAD
          popd

      - name: Show `brew --version`.
        run: |
          printf '### `brew --version` output\n' >> "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"
          printf '%s\n' "$(brew --version)" | tee -a "$GITHUB_STEP_SUMMARY"
          printf '```\n' >> "$GITHUB_STEP_SUMMARY"

      - name: Install `dynare`.
        run: brew install dynare

      - name: Set up `logs` directory.
        run: |
          mkdir -p logs/new
          printf 'HOMEBREW_LOGS=%s\n' "$(pwd)/logs/new" >> "$GITHUB_ENV"

      - name: Test `dynare`.
        run: brew test --verbose dynare

      - name: Switch to `master` branch.
        run: git -C "$(brew --repository homebrew/core)" checkout master

      - name: Set up `logs` directory.
        run: |
          mkdir -p logs/old
          printf 'HOMEBREW_LOGS=%s\n' "$(pwd)/logs/old" >> "$GITHUB_ENV"

      - name: Test `dynare` (again).
        run: brew test --verbose dynare

      - name: Upload logs.
        uses: actions/upload-artifact@v3
        if: always()
        with:
          path: logs
