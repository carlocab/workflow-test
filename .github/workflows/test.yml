name: CI
on: [push, pull_request, workflow_dispatch]
jobs:
  tests:
    name: "Test on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-22.04]
      fail-fast: false
    steps:
      - name: Install GFortran
        run: |
          sudo apt update
          sudo apt install -y gfortran

      - name: Install patched binutils
        run: |
          BINUTILS_VERSION=2.38
          DIRECTORY_NAME="binutils-${BINUTILS_VERSION}"
          TARBALL_NAME="${DIRECTORY_NAME}.tar.gz"
          TARBALL_URL="https://ftp.gnu.org/gnu/binutils/${TARBALL_NAME}"

          curl -OL "$TARBALL_URL"
          tar -xf "$TARBALL_NAME"
          cd "$DIRECTORY_NAME"

          PATCH_URL="https://sourceware.org/bugzilla/attachment.cgi?id=14248"
          curl -L "$PATCH_URL" | patch -p1 || exit 1

          ./configure \
            --disable-debug \
            --disable-dependency-tracking \
            --enable-deterministic-archives \
            --disable-werror \
            --enable-interwork \
            --enable-multilib \
            --enable-64-bit-bfd \
            --enable-plugins \
            --enable-targets=all \
            --disable-nls \
            --disable-gold

          make MAKEINFO=true
          sudo make install MAKEINFO=true

      - name: Build OpenBLAS
        run: |
          OPENBLAS_VERSION=0.3.20
          DIRECTORY_NAME="OpenBLAS-${OPENBLAS_VERSION}"
          TARBALL_NAME="${DIRECTORY_NAME}.tar.gz"
          TARBALL_URL="https://github.com/xianyi/OpenBLAS/releases/download/v${OPENBLAS_VERSION}/${TARBALL_NAME}"

          curl -OL "$TARBALL_URL"
          tar -xf "$TARBALL_NAME"
          cd "$DIRECTORY_NAME"

          export DYNAMIC_ARCH=1
          export TARGET=CORE2

          make CC=gcc FC=gfortran libs netlib shared
          sudo make PREFIX=/usr/local install

      - name: Test installation
        run: |
          cat <<EOS > test.c
            #include <stdio.h>
            #include <stdlib.h>
            #include <math.h>
            #include "cblas.h"

            int main(void) {
              int i;
              double A[6] = {1.0, 2.0, 1.0, -3.0, 4.0, -1.0};
              double B[6] = {1.0, 2.0, 1.0, -3.0, 4.0, -1.0};
              double C[9] = {.5, .5, .5, .5, .5, .5, .5, .5, .5};
              cblas_dgemm(CblasColMajor, CblasNoTrans, CblasTrans,
                          3, 3, 2, 1, A, 3, B, 3, 2, C, 3);
              for (i = 0; i < 9; i++)
                printf("%lf ", C[i]);
              printf("\n");
              if (fabs(C[0]-11) > 1.e-5) abort();
              if (fabs(C[4]-21) > 1.e-5) abort();
              return 0;
            }
          EOS

          gcc -I/usr/local/include test.c -L/usr/local/lib -lopenblas -o test
          LD_LIBRARY_PATH=/usr/local/lib ./test
